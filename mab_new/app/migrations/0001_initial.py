# Generated by Django 3.0.7 on 2020-06-27 11:03

import app.models.contacts_model
import app.models.creditnote_model
import app.models.products_model
import app.models.users_model
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AccGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_standard', models.BooleanField(choices=[(True, 'YES'), (False, 'NO')], db_index=True, default=True)),
                ('group_name', models.CharField(blank=True, max_length=250, null=True)),
                ('group_info', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(choices=[(True, 'YES'), (False, 'NO')], db_index=True, default=True)),
            ],
        ),
        migrations.CreateModel(
            name='AccLedger',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acc_group', models.CharField(blank=True, db_index=True, max_length=200, null=True)),
                ('accounts_name', models.CharField(blank=True, max_length=250, null=True)),
                ('info_message', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(choices=[(True, 'YES'), (False, 'NO')], db_index=True, default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Collections',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collection_due_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('amount', models.FloatField(blank=True, db_index=True, null=True)),
                ('currency_type', models.CharField(choices=[('USD', 'US Dollar'), ('CAD', 'Canadian Dollar'), ('EUR', 'Euro'), ('AED', 'United Arab Emirates Dirham'), ('AFN', 'Afghan Afghani'), ('ALL', 'Albanian Lek'), ('AMD', 'Armenian Dram'), ('ARS', 'Argentine Peso'), ('AUD', 'Australian Dollar'), ('AZN', 'Azerbaijani Manat'), ('BAM', 'Bosnia-Herzegovina Convertible Mark'), ('BDT', 'Bangladeshi Taka'), ('BGN', 'Bulgarian Lev'), ('BHD', 'Bahraini Dinar'), ('BIF', 'Burundian Franc'), ('BND', 'Brunei Dollar'), ('BOB', 'Bolivian Boliviano'), ('BRL', 'Brazilian Real'), ('BWP', 'Botswanan Pula'), ('BYN', 'Belarusian Ruble'), ('BZD', 'Belize Dollar'), ('CDF', 'Congolese Franc'), ('CHF', 'Swiss Franc'), ('CLP', 'Chilean Peso'), ('CNY', 'Chinese Yuan'), ('COP', 'Colombian Peso'), ('CRC', 'Costa Rican Colon'), ('CVE', 'Cape Verdean Escudo'), ('CZK', 'Czech Republic Koruna'), ('DJF', 'Djiboutian Franc'), ('DKK', 'Danish Krone'), ('DOP', 'Dominican Peso'), ('DZD', 'Algerian Dinar'), ('EEK', 'Estonian Kroon'), ('EGP', 'Egyptian Pound'), ('ERN', 'Eritrean Nakfa'), ('ETB', 'Ethiopian Birr'), ('GBP', 'British Pound Sterling'), ('GEL', 'Georgian Lari'), ('GHS', 'Ghanaian Cedi'), ('GNF', 'Guinean Franc'), ('GTQ', 'Guatemalan Quetzal'), ('HKD', 'Hong Kong Dollar'), ('HNL', 'Honduran Lempira'), ('HRK', 'Croatian Kuna'), ('HUF', 'Hungarian Forint'), ('IDR', 'Indonesian Rupiah'), ('ILS', 'Israeli New Sheqel'), ('INR', 'Indian Rupee'), ('IQD', 'Iraqi Dinar'), ('IRR', 'Iranian Rial'), ('ISK', 'Icelandic Krona'), ('JMD', 'Jamaican Dollar'), ('JOD', 'Jordanian Dinar'), ('JPY', 'Japanese Yen'), ('KES', 'Kenyan Shilling'), ('KHR', 'Cambodian Riel'), ('KMF', 'Comorian Franc'), ('KRW', 'South Korean Won'), ('KWD', 'Kuwaiti Dinar'), ('KZT', 'Kazakhstani Tenge'), ('LBP', 'Lebanese Pound'), ('LKR', 'Sri Lankan Rupee'), ('LTL', 'Lithuanian Litas'), ('LVL', 'Latvian Lats'), ('LYD', 'Libyan Dinar'), ('MAD', 'Moroccan Dirham'), ('MDL', 'Moldovan Leu'), ('MGA', 'Malagasy Ariary'), ('MKD', 'Macedonian Denar'), ('MMK', 'Myanma Kyat'), ('MOP', 'Macanese Pataca'), ('MUR', 'Mauritian Rupee'), ('MXN', 'Mexican Peso'), ('MYR', 'Malaysian Ringgit'), ('MZN', 'Mozambican Metical'), ('NAD', 'Namibian Dollar'), ('NGN', 'Nigerian Naira'), ('NIO', 'Nicaraguan Cordoba'), ('NOK', 'Norwegian Krone'), ('NPR', 'Nepalese Rupee'), ('NZD', 'New Zealand Dollar'), ('OMR', 'Omani Rial'), ('PAB', 'Panamanian Balboa'), ('PEN', 'Peruvian Nuevo Sol'), ('PHP', 'Philippine Peso'), ('PKR', 'Pakistani Rupee'), ('PLN', 'Polish Zloty'), ('PYG', 'Paraguayan Guarani'), ('QAR', 'Qatari Rial'), ('RON', 'Romanian Leu'), ('RSD', 'Serbian Dinar'), ('RUB', 'Russian Ruble'), ('RWF', 'Rwandan Franc'), ('SAR', 'Saudi Riyal'), ('SDG', 'Sudanese Pound'), ('SEK', 'Swedish Krona'), ('SGD', 'Singapore Dollar'), ('SOS', 'Somali Shilling'), ('SYP', 'Syrian Pound'), ('THB', 'Thai Baht'), ('TND', 'Tunisian Dinar'), ('TOP', 'Tongan Paanga'), ('TRY', 'Turkish Lira'), ('TTD', 'Trinidad and Tobago Dollar'), ('TWD', 'New Taiwan Dollar'), ('TZS', 'Tanzanian Shilling'), ('UAH', 'Ukrainian Hryvnia'), ('UGX', 'Ugandan Shilling'), ('UYU', 'Uruguayan Peso'), ('UZS', 'Uzbekistan Som'), ('VEF', 'Venezuelan Bolivar'), ('VND', 'Vietnamese Dong'), ('XAF', 'CFA Franc BEAC'), ('XOF', 'CFA Franc BCEAO'), ('YER', 'Yemeni Rial'), ('ZAR', 'South African Rand'), ('ZMK', 'Zambian Kwacha'), ('ZWL', 'Zimbabwean Dollar')], db_index=True, max_length=5)),
                ('payment_type', models.IntegerField(choices=[(1, 'Cash'), (2, 'Card'), (3, 'Cheque'), (4, 'Demand Draft'), (5, 'Net Banking')], db_index=True, default=1)),
                ('collection_status', models.IntegerField(choices=[(1, 'Collection Expected'), (2, 'Still Collecting'), (3, 'Collected')], db_index=True, default=1)),
                ('collection_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
        ),
        migrations.CreateModel(
            name='Contacts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_id', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('is_imported_user', models.BooleanField(blank=True, choices=[(True, 'YES'), (False, 'NO')], db_index=True, default=False)),
                ('customer_type', models.IntegerField(blank=True, choices=[(1, 'CUSTOMER'), (2, 'VENDOR'), (3, 'EMPLOYEE')], db_index=True, default=1, null=True)),
                ('contact_delete_status', models.IntegerField(db_index=True, default=0)),
                ('is_sub_customer', models.IntegerField(blank=True, choices=[(1, 'Parent Customer'), (2, 'Bill With Parent'), (3, 'Bill with Customer')], db_index=True, default=1, null=True)),
                ('salutation', models.IntegerField(choices=[(0, 'Mr.'), (1, 'Mrs.'), (2, 'Miss'), (3, 'Dr.'), (4, 'Ms.')], db_index=True, default=0)),
                ('contact_name', models.CharField(db_index=True, max_length=250)),
                ('display_name', models.CharField(blank=True, db_index=True, max_length=250, null=True)),
                ('organization_type', models.IntegerField(choices=[(1, 'Individual'), (2, 'Proprietorship'), (4, 'Partnership'), (5, 'Trust'), (6, 'Private Limited'), (7, 'Public Limited'), (8, 'Overseas Organisation'), (9, 'Government Organisation')], db_index=True, default=1)),
                ('organization_name', models.CharField(blank=True, max_length=250, null=True)),
                ('is_msme_reg', models.BooleanField(choices=[(True, 'YES'), (False, 'NO')], db_index=True, default=False)),
                ('email', models.EmailField(blank=True, db_index=True, max_length=254, null=True)),
                ('phone_country_code', models.IntegerField(choices=[(1, '+1'), (2, '+7'), (4, '+7'), (5, '+20'), (6, '+27'), (7, '+30'), (8, '+31'), (9, '+32'), (10, '+33'), (11, '+34'), (12, '+36'), (13, '+39'), (14, '+40'), (15, '+41'), (16, '+43'), (17, '+44'), (18, '+45'), (19, '+46'), (20, '+47'), (21, '+48'), (22, '+49'), (23, '+51'), (24, '+52'), (25, '+53'), (26, '+54'), (27, '+55'), (28, '+56'), (29, '+57'), (30, '+58'), (31, '+60'), (32, '+61'), (33, '+61'), (34, '+62'), (35, '+63'), (36, '+64'), (37, '+64'), (38, '+65'), (39, '+66'), (40, '+81'), (41, '+82'), (42, '+84'), (43, '+86'), (44, '+90'), (45, '+91'), (46, '+92'), (47, '+93'), (48, '+94'), (49, '+98'), (50, '+211'), (51, '+212'), (52, '+212'), (53, '+213'), (54, '+216'), (55, '+218'), (56, '+220'), (57, '+221'), (58, '+222'), (59, '+223'), (60, '+224'), (61, '+225'), (62, '+226'), (63, '+227'), (64, '+228'), (65, '+229'), (66, '+230'), (67, '+231'), (68, '+232'), (69, '+233'), (70, '+234'), (71, '+235'), (72, '+236'), (73, '+237'), (74, '+238'), (75, '+239'), (76, '240'), (77, '+241'), (78, '+242'), (79, '+243'), (80, '+244'), (81, '+245'), (82, '+246'), (83, '+248'), (84, '+249'), (85, '+250'), (86, '+251'), (87, '+252'), (88, '+253'), (89, '+254'), (90, '+255'), (91, '+256'), (92, '+257'), (93, '+258'), (94, '+260'), (95, '+261'), (96, '+262'), (97, '+263'), (98, '+264'), (99, '+265'), (100, '+266'), (101, '+267'), (102, '+269'), (103, '+290'), (104, '+291'), (105, '+297'), (106, '+298'), (107, '+299'), (108, '+350'), (109, '+351'), (110, '+352'), (111, '+353'), (112, '+354'), (113, '+355'), (114, '+356'), (115, '+357'), (116, '+358'), (117, '+359'), (118, '+370'), (119, '+371'), (120, '+372'), (121, '+373'), (122, '+374'), (123, '+375'), (124, '+376'), (125, '+377'), (126, '+378'), (127, '+379'), (128, '+380'), (129, '+381'), (130, '+382'), (131, '+383'), (132, '+385'), (133, '+386'), (134, '+387'), (135, '+389'), (136, '+420'), (137, '+421'), (138, '+423'), (139, '+500'), (140, '+501'), (141, '+502'), (142, '+503'), (143, '+504'), (144, '+505'), (145, '+506'), (146, '+507'), (147, '+508'), (148, '+509'), (149, '+590'), (150, '+591'), (151, '+592'), (152, '+593'), (153, '+595'), (154, '+597'), (155, '+598'), (156, '+599'), (157, '+599'), (158, '+670'), (159, '+671'), (160, '+672'), (161, '+673'), (162, '+674'), (163, '+675'), (164, '+676'), (165, '+677'), (166, '+678'), (167, '+679'), (168, '+680'), (169, '+681'), (170, '+682'), (171, '+683'), (172, '+685'), (173, '+686'), (174, '+687'), (175, '+688'), (176, '+689'), (177, '+690'), (178, '+691'), (179, '+692'), (180, '+850'), (181, '+852'), (182, '+853'), (183, '+855'), (184, '+856'), (185, '+880'), (186, '+886'), (187, '+960'), (188, '+961'), (189, '+962'), (190, '+963'), (191, '+964'), (192, '+965'), (193, '+966'), (194, '+967'), (195, '+968'), (196, '+970'), (197, '+971'), (198, '+972'), (199, '+973'), (200, '+974'), (201, '+975'), (202, '+976'), (203, '+977'), (204, '+992'), (205, '+993'), (206, '+994'), (207, '+995'), (208, '+996'), (209, '+998'), (210, '+1-242'), (211, '+1-246'), (212, '+1-264'), (213, '+1-268'), (214, '+1-284'), (215, '+1-340'), (216, '+1-345'), (217, '+1-441'), (218, '+1-473'), (219, '+1-649'), (220, '+1-664'), (221, '+1-670'), (222, '+1-671'), (223, '+1-684'), (224, '+1-721'), (225, '+1-758'), (226, '+1-767'), (227, '+1-784'), (228, '+1-787'), (229, '+1-809'), (230, '+1-868'), (231, '+1-869'), (232, '+1-876'), (233, '+1-876'), (234, '+44-1481'), (235, '+44-1534'), (236, '+44-1624')], db_index=True, default=45, null=True)),
                ('phone', models.CharField(blank=True, db_index=True, max_length=250, null=True)),
                ('website', models.CharField(blank=True, db_index=True, max_length=250, null=True)),
                ('facebook', models.CharField(blank=True, max_length=250, null=True)),
                ('twitter', models.CharField(blank=True, max_length=250, null=True)),
                ('is_active', models.BooleanField(choices=[(True, 'YES'), (False, 'NO')], db_index=True, default=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('attachements', models.FileField(blank=True, db_index=True, null=True, upload_to=app.models.contacts_model.attachments_rename)),
                ('created_on', models.DateTimeField(auto_now=True, db_index=True)),
                ('updated_on', models.DateTimeField(db_index=True, null=True)),
                ('imported_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='imported_user', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'contacts_tbl',
            },
        ),
        migrations.CreateModel(
            name='CreditNode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('save_type', models.IntegerField(choices=[(1, 'save_send'), (2, 'save_close'), (3, 'save_draft')], db_index=True, default=2)),
                ('email', models.CharField(blank=True, max_length=500, null=True)),
                ('cc_email', models.CharField(blank=True, max_length=500, null=True)),
                ('billing_address', models.CharField(blank=True, db_index=True, max_length=500, null=True)),
                ('credit_date', models.DateField(db_index=True)),
                ('state_supply', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('invoice_refrence', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('credit_number', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('creditnote_number_check', models.CharField(choices=[('off', 'off'), ('on', 'on')], db_index=True, default='off', max_length=4)),
                ('amount', models.CharField(blank=True, db_index=True, max_length=10, null=True)),
                ('description', models.CharField(blank=True, db_index=True, max_length=400, null=True)),
                ('terms_and_condition', models.CharField(blank=True, db_index=True, max_length=400, null=True)),
                ('Note', models.CharField(blank=True, db_index=True, max_length=400, null=True)),
                ('attachements', models.FileField(blank=True, db_index=True, null=True, upload_to=app.models.creditnote_model.attachments_rename)),
                ('sub_total', models.CharField(blank=True, db_index=True, default=0.0, max_length=20, null=True)),
                ('cgst_5', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('igst_5', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('sgst_5', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('cgst_12', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('igst_12', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('sgst_12', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('cgst_18', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('igst_18', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('sgst_18', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('cgst_28', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('igst_28', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('sgst_28', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('cgst_other', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('igst_other', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('sgst_other', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('total', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('contact_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.Contacts')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'creditnote_tbl',
            },
        ),
        migrations.CreateModel(
            name='CustomizeModuleName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customize_name', models.IntegerField(blank=True, choices=[(1, 'Contact'), (2, 'Product'), (3, 'Credit Note'), (4, 'Purhase Order'), (5, 'Invoice'), (6, 'Expense')], db_index=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exp_number', models.CharField(max_length=24)),
                ('exp_date', models.DateField()),
                ('exp_sub_total', models.DecimalField(decimal_places=3, max_digits=20)),
                ('exp_total', models.DecimalField(decimal_places=3, max_digits=20)),
                ('exp_bill', models.FileField(blank=True, null=True, upload_to='expense_bills/')),
                ('payment_date', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExpenseCategoryLineItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_description', models.TextField(blank=True, null=True)),
                ('amount', models.DecimalField(decimal_places=3, max_digits=20)),
                ('tax', models.IntegerField(blank=True, null=True)),
                ('total_amount', models.DecimalField(decimal_places=3, max_digits=20)),
                ('reference_id', models.PositiveIntegerField(blank=True, null=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.AccLedger')),
                ('expense', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Expense')),
            ],
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inventory_name', models.CharField(db_index=True, max_length=250)),
                ('in_date', models.DateField(blank=True, db_index=True, null=True)),
                ('stock_cleared', models.BooleanField(choices=[(True, 'YES'), (False, 'NO')], db_index=True, default=False)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MajorHeads',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('major_head_name', models.CharField(max_length=100, unique=True)),
                ('is_active', models.BooleanField(choices=[(True, 'YES'), (False, 'NO')], db_index=True, default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Organisations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organisation_name', models.CharField(db_index=True, max_length=250)),
                ('organisation_legal_name', models.CharField(db_index=True, max_length=250)),
                ('logo', models.FileField(blank=True, null=True, upload_to=app.models.users_model.logo_rename)),
                ('organisation_description', models.TextField(blank=True, null=True)),
                ('line_of_business', models.IntegerField(blank=True, choices=[(1, 'Accounting and Bookkeeping'), (2, 'Advertising'), (3, 'Manufacturing'), (4, 'Agriculture'), (5, 'Photography'), (6, 'Automotive Sales and Repair'), (7, 'Church and Religious Organizationg'), (8, 'Construction'), (9, 'Agriculture'), (10, 'Design, Architecture and Engineering'), (11, 'Financial Services'), (12, 'Information Technology'), (13, 'Insurance Agency and Broker'), (14, 'Legal Services'), (15, 'Lodging such as Hotels and Motels'), (16, 'Medical'), (17, 'Non-Profit'), (18, 'Property Management'), (19, 'Repair and Maintenance'), (20, 'Restaurant'), (21, 'Retail Shop and Online Commerce'), (22, 'Sales: Independent Agent'), (23, 'Transportation'), (24, 'Wholesale Distribution and Sales')], default=1, null=True)),
                ('organisation_type', models.IntegerField(choices=[(1, 'Individual'), (2, 'Proprietorship'), (4, 'Partnership'), (5, 'Trust'), (6, 'Private Limited'), (7, 'Public Limited'), (8, 'Overseas Organisation'), (9, 'Government Organisation')], db_index=True, default=1)),
                ('organisation_pan', models.CharField(blank=True, db_index=True, max_length=10, null=True)),
                ('organisation_cin', models.CharField(blank=True, db_index=True, max_length=21, null=True)),
                ('print_info_voucher', models.CharField(blank=True, db_index=True, max_length=250, null=True)),
                ('terms_and_condition', models.CharField(blank=True, db_index=True, max_length=400, null=True)),
                ('purchase_terms_and_condition', models.CharField(blank=True, db_index=True, max_length=400, null=True)),
                ('purchase_note', models.CharField(blank=True, db_index=True, max_length=400, null=True)),
                ('invoice_terms_and_condition', models.CharField(blank=True, db_index=True, max_length=400, null=True)),
                ('invoice_note', models.CharField(blank=True, db_index=True, max_length=400, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProductsModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_type', models.IntegerField(blank=True, choices=[(0, 'GOODS'), (1, 'SERVICES'), (2, 'BUNDLE')], db_index=True, default=0, null=True)),
                ('product_delete_status', models.IntegerField(db_index=True, default=0)),
                ('sku', models.CharField(db_index=True, max_length=20)),
                ('product_name', models.CharField(db_index=True, max_length=250)),
                ('product_description', models.TextField(blank=True, max_length=300, null=True)),
                ('hsn_code', models.CharField(blank=True, db_index=True, max_length=250, null=True)),
                ('tds', models.CharField(blank=True, db_index=True, default=0.0, max_length=5, null=True)),
                ('unit', models.IntegerField(blank=True, choices=[(0, 'Kilogram'), (1, 'Grams'), (2, 'Ounce'), (3, 'Pound'), (4, 'Tons'), (5, 'Metric Tons'), (6, 'Carat'), (7, 'Furlong'), (8, 'Inches'), (9, 'Foot'), (10, 'Yard'), (11, 'Mile'), (12, 'Meter'), (13, 'Millimetres'), (14, 'Square Feet'), (15, 'Square Metre'), (16, 'Centimetre'), (17, 'Bucket'), (18, 'Bag'), (19, 'Bowl'), (20, 'Box'), (21, 'Card'), (22, 'Case'), (23, 'Carton'), (24, 'Dozen'), (25, 'Each'), (26, 'Gallon'), (27, 'Gross'), (28, 'Kit'), (29, 'Set'), (30, 'Sheet'), (31, 'Tube'), (32, 'Pack'), (31, 'Teaspoon'), (33, 'Tablespoon'), (34, 'Cup'), (35, 'Pint'), (36, 'Quart'), (37, 'Milliliter'), (38, 'Liter')], db_index=True, default=0, null=True)),
                ('hidden_img', models.TextField(blank=True, null=True)),
                ('is_sales', models.BooleanField(blank=True, choices=[(True, 'YES'), (False, 'NO')], db_index=True, default=True, null=True)),
                ('selling_price', models.CharField(blank=True, db_index=True, default=0.0, max_length=15, null=True)),
                ('selling_tax', models.CharField(blank=True, db_index=True, default=0.0, max_length=5, null=True)),
                ('inclusive_tax', models.CharField(blank=True, db_index=True, max_length=15, null=True)),
                ('sales_account', models.IntegerField(blank=True, choices=[('Income', ((0, 'Discount'), (1, 'General Income'), (2, 'Interest Income'), (3, 'Late Fee Income'), (4, 'Other Charges'), (5, 'Sales'), (6, 'Shipping Charges')))], db_index=True, null=True)),
                ('is_purchase', models.BooleanField(blank=True, choices=[(True, 'YES'), (False, 'NO')], db_index=True, default=True, null=True)),
                ('purchase_price', models.CharField(blank=True, db_index=True, default=0.0, max_length=15, null=True)),
                ('purchase_tax', models.CharField(blank=True, db_index=True, default=0.0, max_length=5, null=True)),
                ('inclusive_purchase_tax', models.CharField(blank=True, db_index=True, max_length=15, null=True)),
                ('reverse_charges', models.CharField(blank=True, db_index=True, max_length=15, null=True)),
                ('purchase_account', models.IntegerField(blank=True, choices=[('Expense', ((0, 'Advertising and Marketing/Promotion'), (1, 'Automobile Expense'), (2, 'Bad Debit'), (3, 'Bank Fees and Charges'), (4, 'Consultant Expense'), (5, 'Charitable Contributions'), (6, 'Contract Assets'), (7, 'Credit Card Charges'), (8, 'Depreciation Expense'), (9, 'IT and Internet Expenses'), (10, 'Janitorial Expenses'), (11, 'Meals and Entertainment'), (12, 'Merchandise'), (13, 'Office Supplies'), (14, 'Other Expenses'), (15, 'Postage'), (16, 'Printing and Stationery'), (17, 'Raw Materials and Consumables'), (18, 'Repairs and Maintenance'), (19, 'Salaries and Employee Wages'), (20, 'Telephone Expenses'), (21, 'Transportation Expenses'), (22, 'Travel Expenses'), (23, 'Cost Of Goods Sold'), (24, 'Accounting Fee'), (25, 'Annual Maintenance Charges'), (26, 'Depreciation'), (27, 'Refund From Vendors'), (28, 'Dues & Subscription'), (29, 'Education & Training'), (30, 'Fuel'), (31, 'Interest Expense')))], db_index=True, null=True)),
                ('discount', models.IntegerField(blank=True, db_index=True, default=0.0, null=True)),
                ('abatement', models.IntegerField(blank=True, db_index=True, default=0, null=True)),
                ('is_active', models.BooleanField(choices=[(True, 'YES'), (False, 'NO')], db_index=True, default=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='User_Tax_Details',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_user', models.BooleanField(choices=[(True, 'YES'), (False, 'NO')], db_index=True, default=False)),
                ('is_organisation', models.BooleanField(choices=[(True, 'YES'), (False, 'NO')], db_index=True, default=False)),
                ('pan', models.CharField(blank=True, db_index=True, max_length=10, null=True)),
                ('gstin', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('gst_reg_type', models.IntegerField(blank=True, choices=[(0, 'Not Applicable'), (1, 'GST Registered-Regular'), (2, 'GST Registered-Composition'), (3, 'GST Unregistered'), (4, 'Consumer'), (5, 'Overseas'), (6, 'SEZ'), (7, 'Deemed Exports -EOU’s, STP’s , EHTP’s etc'), (8, 'Composite GST')], db_index=True, default=0, null=True)),
                ('business_reg_no', models.CharField(blank=True, db_index=True, max_length=15, null=True)),
                ('tax_reg_no', models.CharField(blank=True, db_index=True, max_length=15, null=True)),
                ('cst_reg_no', models.CharField(blank=True, db_index=True, max_length=15, null=True)),
                ('tds', models.IntegerField(blank=True, db_index=True, default=0.0, null=True)),
                ('preferred_currency', models.CharField(blank=True, choices=[('USD', 'US Dollar'), ('CAD', 'Canadian Dollar'), ('EUR', 'Euro'), ('AED', 'United Arab Emirates Dirham'), ('AFN', 'Afghan Afghani'), ('ALL', 'Albanian Lek'), ('AMD', 'Armenian Dram'), ('ARS', 'Argentine Peso'), ('AUD', 'Australian Dollar'), ('AZN', 'Azerbaijani Manat'), ('BAM', 'Bosnia-Herzegovina Convertible Mark'), ('BDT', 'Bangladeshi Taka'), ('BGN', 'Bulgarian Lev'), ('BHD', 'Bahraini Dinar'), ('BIF', 'Burundian Franc'), ('BND', 'Brunei Dollar'), ('BOB', 'Bolivian Boliviano'), ('BRL', 'Brazilian Real'), ('BWP', 'Botswanan Pula'), ('BYN', 'Belarusian Ruble'), ('BZD', 'Belize Dollar'), ('CDF', 'Congolese Franc'), ('CHF', 'Swiss Franc'), ('CLP', 'Chilean Peso'), ('CNY', 'Chinese Yuan'), ('COP', 'Colombian Peso'), ('CRC', 'Costa Rican Colon'), ('CVE', 'Cape Verdean Escudo'), ('CZK', 'Czech Republic Koruna'), ('DJF', 'Djiboutian Franc'), ('DKK', 'Danish Krone'), ('DOP', 'Dominican Peso'), ('DZD', 'Algerian Dinar'), ('EEK', 'Estonian Kroon'), ('EGP', 'Egyptian Pound'), ('ERN', 'Eritrean Nakfa'), ('ETB', 'Ethiopian Birr'), ('GBP', 'British Pound Sterling'), ('GEL', 'Georgian Lari'), ('GHS', 'Ghanaian Cedi'), ('GNF', 'Guinean Franc'), ('GTQ', 'Guatemalan Quetzal'), ('HKD', 'Hong Kong Dollar'), ('HNL', 'Honduran Lempira'), ('HRK', 'Croatian Kuna'), ('HUF', 'Hungarian Forint'), ('IDR', 'Indonesian Rupiah'), ('ILS', 'Israeli New Sheqel'), ('INR', 'Indian Rupee'), ('IQD', 'Iraqi Dinar'), ('IRR', 'Iranian Rial'), ('ISK', 'Icelandic Krona'), ('JMD', 'Jamaican Dollar'), ('JOD', 'Jordanian Dinar'), ('JPY', 'Japanese Yen'), ('KES', 'Kenyan Shilling'), ('KHR', 'Cambodian Riel'), ('KMF', 'Comorian Franc'), ('KRW', 'South Korean Won'), ('KWD', 'Kuwaiti Dinar'), ('KZT', 'Kazakhstani Tenge'), ('LBP', 'Lebanese Pound'), ('LKR', 'Sri Lankan Rupee'), ('LTL', 'Lithuanian Litas'), ('LVL', 'Latvian Lats'), ('LYD', 'Libyan Dinar'), ('MAD', 'Moroccan Dirham'), ('MDL', 'Moldovan Leu'), ('MGA', 'Malagasy Ariary'), ('MKD', 'Macedonian Denar'), ('MMK', 'Myanma Kyat'), ('MOP', 'Macanese Pataca'), ('MUR', 'Mauritian Rupee'), ('MXN', 'Mexican Peso'), ('MYR', 'Malaysian Ringgit'), ('MZN', 'Mozambican Metical'), ('NAD', 'Namibian Dollar'), ('NGN', 'Nigerian Naira'), ('NIO', 'Nicaraguan Cordoba'), ('NOK', 'Norwegian Krone'), ('NPR', 'Nepalese Rupee'), ('NZD', 'New Zealand Dollar'), ('OMR', 'Omani Rial'), ('PAB', 'Panamanian Balboa'), ('PEN', 'Peruvian Nuevo Sol'), ('PHP', 'Philippine Peso'), ('PKR', 'Pakistani Rupee'), ('PLN', 'Polish Zloty'), ('PYG', 'Paraguayan Guarani'), ('QAR', 'Qatari Rial'), ('RON', 'Romanian Leu'), ('RSD', 'Serbian Dinar'), ('RUB', 'Russian Ruble'), ('RWF', 'Rwandan Franc'), ('SAR', 'Saudi Riyal'), ('SDG', 'Sudanese Pound'), ('SEK', 'Swedish Krona'), ('SGD', 'Singapore Dollar'), ('SOS', 'Somali Shilling'), ('SYP', 'Syrian Pound'), ('THB', 'Thai Baht'), ('TND', 'Tunisian Dinar'), ('TOP', 'Tongan Paanga'), ('TRY', 'Turkish Lira'), ('TTD', 'Trinidad and Tobago Dollar'), ('TWD', 'New Taiwan Dollar'), ('TZS', 'Tanzanian Shilling'), ('UAH', 'Ukrainian Hryvnia'), ('UGX', 'Ugandan Shilling'), ('UYU', 'Uruguayan Peso'), ('UZS', 'Uzbekistan Som'), ('VEF', 'Venezuelan Bolivar'), ('VND', 'Vietnamese Dong'), ('XAF', 'CFA Franc BEAC'), ('XOF', 'CFA Franc BCEAO'), ('YER', 'Yemeni Rial'), ('ZAR', 'South African Rand'), ('ZMK', 'Zambian Kwacha'), ('ZWL', 'Zimbabwean Dollar')], db_index=True, default='INR', max_length=5, null=True)),
                ('opening_balance', models.CharField(blank=True, db_index=True, default=0.0, max_length=250, null=True)),
                ('as_of', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('preferred_payment_method', models.IntegerField(blank=True, choices=[(0, 'Any'), (1, 'Cash'), (2, 'Card'), (3, 'Cheque'), (4, 'Net Banking')], db_index=True, default=0, null=True)),
                ('preferred_delivery', models.IntegerField(blank=True, choices=[(0, 'Any'), (1, 'Print Later'), (2, 'Send Later')], db_index=True, default=0, null=True)),
                ('invoice_terms', models.IntegerField(blank=True, choices=[(1, 'On Due Date'), (2, '10 Days'), (3, '20 Days'), (4, '30 Days'), (5, '60 Days'), (6, '90 Days')], db_index=True, null=True)),
                ('bills_terms', models.IntegerField(blank=True, choices=[(1, 'On Due Date'), (2, '10 Days'), (3, '20 Days'), (4, '30 Days'), (5, '60 Days'), (6, '90 Days')], db_index=True, null=True)),
                ('is_organisation_gst_register', models.BooleanField(blank=True, db_index=True, default=False, null=True)),
                ('multiple_gst', models.BooleanField(blank=True, db_index=True, default=False, null=True)),
                ('contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.Contacts')),
                ('organisation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.Organisations')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='User_Email_Details',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_user', models.BooleanField(choices=[(True, 'YES'), (False, 'NO')], db_index=True, default=False)),
                ('email', models.EmailField(db_index=True, max_length=254, null=True)),
                ('is_official', models.BooleanField(choices=[(True, 'YES'), (False, 'NO')], db_index=True, default=True)),
                ('is_personal', models.BooleanField(choices=[(True, 'YES'), (False, 'NO')], db_index=True, default=True)),
                ('created_on', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('updated_on', models.DateTimeField(db_index=True, null=True)),
                ('contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.Contacts')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'user_email_tbl',
            },
        ),
        migrations.CreateModel(
            name='User_Address_Details',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_user', models.BooleanField(choices=[(True, 'YES'), (False, 'NO')], db_index=True, default=False)),
                ('is_organisation', models.BooleanField(choices=[(True, 'YES'), (False, 'NO')], db_index=True, default=False)),
                ('default_address', models.BooleanField(blank=True, choices=[(True, 'YES'), (False, 'NO')], db_index=True, default=False, null=True)),
                ('address_tag', models.TextField(blank=True, null=True)),
                ('contact_person', models.CharField(blank=True, max_length=250, null=True)),
                ('flat_no', models.CharField(blank=True, db_index=True, max_length=250, null=True)),
                ('street', models.CharField(blank=True, db_index=True, max_length=250, null=True)),
                ('city', models.CharField(blank=True, db_index=True, max_length=250, null=True)),
                ('state', models.CharField(blank=True, choices=[('AN', 'Andaman and Nicobar Islands'), ('AP', 'Andhra Pradesh'), ('AR', 'Arunachal Pradesh'), ('AS', 'Assam'), ('BR', 'Bihar'), ('CG', 'Chandigarh'), ('CH', 'Chhattisgarh'), ('DH', 'Dadra and Nagar Haveli'), ('DD', 'Daman and Diu'), ('DL', 'Delhi'), ('GA', 'Goa'), ('GJ', 'Gujarat'), ('HR', 'Haryana'), ('HP', 'Himachal Pradesh'), ('JK', 'Jammu and Kashmir'), ('JH', 'Jharkhand'), ('KA', 'Karnataka'), ('KL', 'Kerala'), ('LD', 'Lakshadweep'), ('LA', 'Ladakh'), ('MP', 'Madhya Pradesh'), ('MH', 'Maharashtra'), ('MN', 'Manipur'), ('ML', 'Meghalaya'), ('MZ', 'Mizoram'), ('NL', 'Nagaland'), ('OR', 'Odisha'), ('PY', 'Puducherry'), ('PB', 'Punjab'), ('RJ', 'Rajasthan'), ('SK', 'Sikkim'), ('TN', 'Tamil Nadu'), ('TS', 'Telangana'), ('TR', 'Tripura'), ('UK', 'Uttarakhand'), ('UP', 'Uttar Pradesh'), ('WB', 'West Bengal')], db_index=True, max_length=250, null=True)),
                ('country', models.CharField(blank=True, choices=[('IN', 'India')], db_index=True, default='IN', max_length=5, null=True)),
                ('pincode', models.CharField(blank=True, db_index=True, max_length=250, null=True)),
                ('is_shipping_address_diff', models.IntegerField(blank=True, choices=[(1, 'YES'), (0, 'NO')], db_index=True, default=0, null=True)),
                ('is_billing_address', models.IntegerField(blank=True, choices=[(1, 'YES'), (0, 'NO')], db_index=True, default=1, null=True)),
                ('is_shipping_address', models.IntegerField(blank=True, choices=[(1, 'YES'), (0, 'NO')], db_index=True, default=1, null=True)),
                ('created_on', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('updated_on', models.DateTimeField(db_index=True, null=True)),
                ('contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.Contacts')),
                ('organisation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.Organisations')),
                ('organisation_tax', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.User_Tax_Details')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'user_address_details_tbl',
            },
        ),
        migrations.CreateModel(
            name='User_Account_Details',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_user', models.BooleanField(choices=[(True, 'YES'), (False, 'NO')], db_index=True, default=False)),
                ('account_number', models.CharField(blank=True, db_index=True, max_length=250, null=True)),
                ('account_holder_name', models.CharField(blank=True, db_index=True, max_length=250, null=True)),
                ('ifsc_code', models.CharField(blank=True, db_index=True, max_length=20, null=True)),
                ('bank_name', models.CharField(blank=True, db_index=True, max_length=250, null=True)),
                ('bank_branch_name', models.CharField(blank=True, db_index=True, max_length=250, null=True)),
                ('created_on', models.DateTimeField(auto_now=True, db_index=True, null=True)),
                ('updated_on', models.DateTimeField(db_index=True, null=True)),
                ('contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.Contacts')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'user_account_details_tbl',
            },
        ),
        migrations.CreateModel(
            name='PurchaseOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purchase_order_number', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('purchase_number_check', models.CharField(blank=True, choices=[('off', 'off'), ('on', 'on')], db_index=True, default='off', max_length=4, null=True)),
                ('save_type', models.IntegerField(choices=[(1, 'save_send'), (2, 'save_close'), (3, 'save_draft'), (4, 'save_print')], db_index=True, default=2)),
                ('purchase_order_date', models.DateField(db_index=True)),
                ('purchase_delivery_date', models.DateField(db_index=True)),
                ('purchase_refrence', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('delivery_address', models.CharField(blank=True, db_index=True, max_length=500, null=True)),
                ('delivery_state', models.CharField(blank=True, db_index=True, max_length=10, null=True)),
                ('is_organisation_delivary', models.CharField(choices=[('off', 'off'), ('on', 'on')], db_index=True, default='off', max_length=4)),
                ('is_customer_delivary', models.CharField(choices=[('off', 'off'), ('on', 'on')], db_index=True, default='off', max_length=4)),
                ('customer', models.CharField(blank=True, db_index=True, max_length=10, null=True)),
                ('attention', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('country_code', models.CharField(blank=True, db_index=True, max_length=10, null=True)),
                ('contact_number', models.CharField(blank=True, db_index=True, max_length=10, null=True)),
                ('terms_and_condition', models.CharField(blank=True, db_index=True, max_length=400, null=True)),
                ('Note', models.CharField(blank=True, db_index=True, max_length=400, null=True)),
                ('sub_total', models.CharField(blank=True, db_index=True, max_length=20, null=True)),
                ('total_discount', models.CharField(blank=True, db_index=True, max_length=20, null=True)),
                ('total_amount', models.CharField(blank=True, db_index=True, max_length=20, null=True)),
                ('freight_charges', models.CharField(blank=True, db_index=True, max_length=20, null=True)),
                ('advance', models.CharField(blank=True, db_index=True, max_length=20, null=True)),
                ('total_balance', models.CharField(blank=True, db_index=True, max_length=20, null=True)),
                ('cgst_5', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('igst_5', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('sgst_5', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('cgst_12', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('igst_12', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('sgst_12', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('cgst_18', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('igst_18', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('sgst_18', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('cgst_28', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('igst_28', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('sgst_28', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('cgst_other', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('igst_other', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('sgst_other', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('advance_payment_date', models.DateField(blank=True, db_index=True, null=True)),
                ('advacne_payment_method', models.CharField(blank=True, choices=[(1, 'Cash'), (2, 'Card'), (3, 'Cheque'), (4, 'Demand Draft'), (5, 'Net Banking')], db_index=True, max_length=5, null=True)),
                ('advacne_note', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('vendor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.Contacts')),
            ],
            options={
                'verbose_name_plural': 'purchase_order_tbl',
            },
        ),
        migrations.CreateModel(
            name='Purchase_Items',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, db_index=True, max_length=250, null=True)),
                ('price', models.CharField(blank=True, db_index=True, max_length=50, null=True)),
                ('unit', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('quantity', models.CharField(blank=True, db_index=True, max_length=10, null=True)),
                ('discount_type', models.CharField(blank=True, db_index=True, max_length=10, null=True)),
                ('discount', models.CharField(blank=True, db_index=True, max_length=11, null=True)),
                ('tax', models.CharField(blank=True, db_index=True, max_length=11, null=True)),
                ('amount', models.CharField(blank=True, db_index=True, max_length=11, null=True)),
                ('account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.AccGroups')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.ProductsModel')),
                ('purchase_item_list', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.PurchaseOrder')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'puchase_items_tbl',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_id', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('display_name', models.CharField(db_index=True, max_length=250, null=True)),
                ('salutation', models.IntegerField(blank=True, choices=[(0, 'Mr.'), (1, 'Mrs.'), (2, 'Miss'), (3, 'Dr.'), (4, 'Ms.')], db_index=True, default=0)),
                ('customer_type', models.IntegerField(blank=True, choices=[(1, 'CUSTOMER'), (2, 'VENDOR'), (3, 'EMPLOYEE')], db_index=True, default=1)),
                ('phone', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('fax', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('pan', models.CharField(db_index=True, max_length=12, null=True)),
                ('website', models.CharField(blank=True, db_index=True, max_length=250, null=True)),
                ('facebook', models.CharField(blank=True, db_index=True, max_length=250, null=True)),
                ('twitter', models.CharField(blank=True, db_index=True, max_length=250, null=True)),
                ('skype', models.CharField(blank=True, db_index=True, max_length=250, null=True)),
                ('linkedin', models.CharField(blank=True, db_index=True, max_length=250, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'user_profile_tbl',
            },
        ),
        migrations.CreateModel(
            name='ProductPhotos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_image', models.FileField(blank=True, db_index=True, null=True, upload_to=app.models.products_model.product_file_rename)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.ProductsModel')),
            ],
        ),
        migrations.CreateModel(
            name='ProductAccounts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accounts_name', models.CharField(db_index=True, max_length=250)),
                ('is_active', models.BooleanField(choices=[(True, 'YES'), (False, 'NO')], db_index=True, default=True)),
                ('is_sales', models.BooleanField(choices=[(True, 'YES'), (False, 'NO')], db_index=True, default=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrganisationGSTSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('taxname', models.CharField(blank=True, max_length=100, null=True)),
                ('taxname_percent', models.CharField(blank=True, default=0, max_length=8, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrganisationCompositeGSTSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('taxname', models.CharField(blank=True, max_length=100, null=True)),
                ('taxname_percent', models.CharField(blank=True, default=0, max_length=8, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Organisation_Info',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organisation_type', models.BooleanField(choices=[(True, 'YES'), (False, 'NO')], db_index=True, default=False)),
                ('organisation_name', models.BooleanField(choices=[(True, 'YES'), (False, 'NO')], db_index=True, default=False)),
                ('organisation_legal_name', models.BooleanField(choices=[(True, 'YES'), (False, 'NO')], db_index=True, default=False)),
                ('organisation_info', models.BooleanField(choices=[(True, 'YES'), (False, 'NO')], db_index=True, default=False)),
                ('line_of_business', models.BooleanField(choices=[(True, 'YES'), (False, 'NO')], db_index=True, default=False)),
                ('logo', models.BooleanField(choices=[(True, 'YES'), (False, 'NO')], db_index=True, default=False)),
                ('pan', models.BooleanField(choices=[(True, 'YES'), (False, 'NO')], db_index=True, default=False)),
                ('gstin', models.BooleanField(choices=[(True, 'YES'), (False, 'NO')], db_index=True, default=False)),
                ('gst_reg_type', models.BooleanField(choices=[(True, 'YES'), (False, 'NO')], db_index=True, default=False)),
                ('cin', models.BooleanField(choices=[(True, 'YES'), (False, 'NO')], db_index=True, default=False)),
                ('description', models.BooleanField(choices=[(True, 'YES'), (False, 'NO')], db_index=True, default=False)),
                ('flat_no', models.BooleanField(choices=[(True, 'YES'), (False, 'NO')], db_index=True, default=False)),
                ('street', models.BooleanField(choices=[(True, 'YES'), (False, 'NO')], db_index=True, default=False)),
                ('city', models.BooleanField(choices=[(True, 'YES'), (False, 'NO')], db_index=True, default=False)),
                ('state', models.BooleanField(choices=[(True, 'YES'), (False, 'NO')], db_index=True, default=False)),
                ('country', models.BooleanField(choices=[(True, 'YES'), (False, 'NO')], db_index=True, default=False)),
                ('pincode', models.BooleanField(choices=[(True, 'YES'), (False, 'NO')], db_index=True, default=False)),
                ('email', models.BooleanField(choices=[(True, 'YES'), (False, 'NO')], db_index=True, default=False)),
                ('phone', models.BooleanField(choices=[(True, 'YES'), (False, 'NO')], db_index=True, default=False)),
                ('fax', models.BooleanField(choices=[(True, 'YES'), (False, 'NO')], db_index=True, default=False)),
                ('website', models.BooleanField(choices=[(True, 'YES'), (False, 'NO')], db_index=True, default=False)),
                ('facebook', models.BooleanField(choices=[(True, 'YES'), (False, 'NO')], db_index=True, default=False)),
                ('twitter', models.BooleanField(choices=[(True, 'YES'), (False, 'NO')], db_index=True, default=False)),
                ('skype', models.BooleanField(choices=[(True, 'YES'), (False, 'NO')], db_index=True, default=False)),
                ('linkedin', models.BooleanField(choices=[(True, 'YES'), (False, 'NO')], db_index=True, default=False)),
                ('organisation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.Organisations')),
            ],
        ),
        migrations.CreateModel(
            name='Organisation_Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(db_index=True, max_length=50)),
                ('email', models.CharField(blank=True, max_length=250)),
                ('website', models.CharField(blank=True, db_index=True, max_length=250, null=True)),
                ('fax', models.CharField(blank=True, db_index=True, max_length=50, null=True)),
                ('skype', models.CharField(blank=True, db_index=True, max_length=250, null=True)),
                ('linkedin', models.CharField(blank=True, db_index=True, max_length=250, null=True)),
                ('facebook', models.CharField(blank=True, db_index=True, max_length=250, null=True)),
                ('organisation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.Organisations')),
            ],
        ),
        migrations.CreateModel(
            name='InvoiceModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(blank=True, max_length=500, null=True)),
                ('cc_email', models.CharField(blank=True, max_length=500, null=True)),
                ('purchase_order_number', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('invoice_number', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('invoice_check', models.CharField(blank=True, choices=[('off', 'off'), ('on', 'on')], db_index=True, default='off', max_length=4, null=True)),
                ('save_type', models.IntegerField(choices=[(1, 'save_send'), (2, 'save_close'), (3, 'save_draft'), (4, 'save_print')], db_index=True, default=2)),
                ('invoice_date', models.DateField(db_index=True)),
                ('invoice_type_new', models.CharField(choices=[('off', 'off'), ('on', 'on')], db_index=True, default='off', max_length=4)),
                ('invoice_type_recurring', models.CharField(choices=[('off', 'off'), ('on', 'on')], db_index=True, default='off', max_length=4)),
                ('invoice_new_pay_terms', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('invoice_new_due_date', models.DateField(blank=True, db_index=True, null=True)),
                ('invoice_recurring_start_date', models.DateField(blank=True, db_index=True, null=True)),
                ('invoice_recurring_end_date', models.DateField(blank=True, db_index=True, null=True)),
                ('invoice_recurring_repeat', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('invoice_recurring_frequency', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('invoice_recurring_advance', models.IntegerField(blank=True, db_index=True, null=True)),
                ('invoice_salesperson', models.CharField(blank=True, db_index=True, max_length=10, null=True)),
                ('invoice_state_supply', models.CharField(blank=True, db_index=True, max_length=15, null=True)),
                ('terms_and_condition', models.CharField(blank=True, db_index=True, max_length=400, null=True)),
                ('Note', models.CharField(blank=True, db_index=True, max_length=400, null=True)),
                ('sub_total', models.CharField(blank=True, db_index=True, max_length=20, null=True)),
                ('total_discount', models.CharField(blank=True, db_index=True, max_length=20, null=True)),
                ('shipping_charges', models.CharField(blank=True, db_index=True, max_length=20, null=True)),
                ('total_amount', models.CharField(blank=True, db_index=True, max_length=20, null=True)),
                ('cgst_5', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('igst_5', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('sgst_5', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('cgst_12', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('igst_12', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('sgst_12', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('cgst_18', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('igst_18', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('sgst_18', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('cgst_28', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('igst_28', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('sgst_28', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('cgst_other', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('igst_other', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('sgst_other', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('invoice_customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.Contacts')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'invoice_tbl',
            },
        ),
        migrations.CreateModel(
            name='Invoice_Line_Items',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, db_index=True, max_length=250, null=True)),
                ('price', models.CharField(blank=True, db_index=True, max_length=50, null=True)),
                ('unit', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('quantity', models.CharField(blank=True, db_index=True, max_length=10, null=True)),
                ('discount_type', models.CharField(blank=True, db_index=True, max_length=10, null=True)),
                ('discount', models.CharField(blank=True, db_index=True, max_length=11, null=True)),
                ('tax', models.CharField(blank=True, db_index=True, max_length=11, null=True)),
                ('amount', models.CharField(blank=True, db_index=True, max_length=11, null=True)),
                ('account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.AccGroups')),
                ('invoice_item_list', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.InvoiceModel')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.ProductsModel')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'invoice_items_tbl',
            },
        ),
        migrations.CreateModel(
            name='InventoryProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(db_index=True, default=0)),
                ('unit', models.IntegerField(blank=True, choices=[(0, 'Kilogram'), (1, 'Grams'), (2, 'Ounce'), (3, 'Pound'), (4, 'Tons'), (5, 'Metric Tons'), (6, 'Carat'), (7, 'Furlong'), (8, 'Inches'), (9, 'Foot'), (10, 'Yard'), (11, 'Mile'), (12, 'Meter'), (13, 'Millimetres'), (14, 'Square Feet'), (15, 'Square Metre'), (16, 'Centimetre'), (17, 'Bucket'), (18, 'Bag'), (19, 'Bowl'), (20, 'Box'), (21, 'Card'), (22, 'Case'), (23, 'Carton'), (24, 'Dozen'), (25, 'Each'), (26, 'Gallon'), (27, 'Gross'), (28, 'Kit'), (29, 'Set'), (30, 'Sheet'), (31, 'Tube'), (32, 'Pack'), (31, 'Teaspoon'), (33, 'Tablespoon'), (34, 'Cup'), (35, 'Pint'), (36, 'Quart'), (37, 'Milliliter'), (38, 'Liter')], db_index=True, null=True)),
                ('threshold', models.IntegerField(db_index=True, default=0)),
                ('stop_at_min_hold', models.IntegerField(db_index=True, default=0)),
                ('notify_on_threshold', models.BooleanField(choices=[(True, 'YES'), (False, 'NO')], db_index=True, default=True)),
                ('notify_on_min_hold', models.BooleanField(choices=[(True, 'YES'), (False, 'NO')], db_index=True, default=True)),
                ('min_hold_date', models.DateField(blank=True, db_index=True, null=True)),
                ('threshold_date', models.DateField(blank=True, db_index=True, null=True)),
                ('min_hold_notify_trigger', models.IntegerField(blank=True, choices=[(0, '5 DAYS AGO'), (1, '1 WEEK AGO'), (2, '10 DAYS AGO'), (3, '2 WEEKS AGO'), (4, '1 MONTH AGO'), (5, '45 DAYS AGO'), (6, '2 MONTHS AGO'), (7, '3 MONTHS AGO'), (8, '6 MONTHS AGO'), (9, '1 YEAR AGO')], db_index=True, null=True)),
                ('threshold_notify_trigger', models.IntegerField(blank=True, choices=[(0, '5 DAYS AGO'), (1, '1 WEEK AGO'), (2, '10 DAYS AGO'), (3, '2 WEEKS AGO'), (4, '1 MONTH AGO'), (5, '45 DAYS AGO'), (6, '2 MONTHS AGO'), (7, '3 MONTHS AGO'), (8, '6 MONTHS AGO'), (9, '1 YEAR AGO')], db_index=True, null=True)),
                ('cleared_on', models.DateField(blank=True, db_index=True, null=True)),
                ('inventory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.Inventory')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.ProductsModel')),
            ],
        ),
        migrations.CreateModel(
            name='InventoryNotificationRemiander',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_threshold', models.BooleanField(choices=[(True, 'YES'), (False, 'NO')], db_index=True, default=True)),
                ('details', models.TextField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('inventory_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.InventoryProduct')),
            ],
        ),
        migrations.CreateModel(
            name='ExpenseLineItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_description', models.TextField(blank=True, null=True)),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('rate', models.DecimalField(decimal_places=3, max_digits=20)),
                ('amount', models.DecimalField(decimal_places=3, max_digits=20)),
                ('tax', models.IntegerField()),
                ('total_amount', models.DecimalField(decimal_places=3, max_digits=20)),
                ('reference_id', models.PositiveIntegerField(blank=True, null=True)),
                ('expense_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.ExpenseCategoryLineItem')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.ProductsModel')),
            ],
        ),
        migrations.AddField(
            model_name='expense',
            name='payment_method',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.PaymentMethod'),
        ),
        migrations.AddField(
            model_name='expense',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='expense',
            name='vendor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Contacts'),
        ),
        migrations.CreateModel(
            name='CustomizePurchaseView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purchase_number', models.IntegerField(blank=True, choices=[(1, 'YES'), (0, 'NO')], db_index=True, default=0, null=True)),
                ('purchase_reference', models.IntegerField(blank=True, choices=[(1, 'YES'), (0, 'NO')], db_index=True, default=0, null=True)),
                ('purchase_vendor', models.IntegerField(blank=True, choices=[(1, 'YES'), (0, 'NO')], db_index=True, default=0, null=True)),
                ('purchase_status', models.IntegerField(blank=True, choices=[(1, 'YES'), (0, 'NO')], db_index=True, default=0, null=True)),
                ('purchase_total', models.IntegerField(blank=True, choices=[(1, 'YES'), (0, 'NO')], db_index=True, default=0, null=True)),
                ('purchase_date', models.IntegerField(blank=True, choices=[(1, 'YES'), (0, 'NO')], db_index=True, default=0, null=True)),
                ('customize_view_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.CustomizeModuleName')),
            ],
        ),
        migrations.CreateModel(
            name='CustomizeProductView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_sku', models.IntegerField(blank=True, choices=[(1, 'YES'), (0, 'NO')], db_index=True, default=0, null=True)),
                ('product_type', models.IntegerField(blank=True, choices=[(1, 'YES'), (0, 'NO')], db_index=True, default=0, null=True)),
                ('product_name', models.IntegerField(blank=True, choices=[(1, 'YES'), (0, 'NO')], db_index=True, default=0, null=True)),
                ('product_hsn', models.IntegerField(blank=True, choices=[(1, 'YES'), (0, 'NO')], db_index=True, default=0, null=True)),
                ('product_description', models.IntegerField(blank=True, choices=[(1, 'YES'), (0, 'NO')], db_index=True, default=0, null=True)),
                ('product_selling_price', models.IntegerField(blank=True, choices=[(1, 'YES'), (0, 'NO')], db_index=True, default=0, null=True)),
                ('product_Purchase_price', models.IntegerField(blank=True, choices=[(1, 'YES'), (0, 'NO')], db_index=True, default=0, null=True)),
                ('customize_view_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.CustomizeModuleName')),
            ],
        ),
        migrations.CreateModel(
            name='CustomizeInvoiceView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_number', models.IntegerField(blank=True, choices=[(1, 'YES'), (0, 'NO')], db_index=True, default=0, null=True)),
                ('invoice_customer', models.IntegerField(blank=True, choices=[(1, 'YES'), (0, 'NO')], db_index=True, default=0, null=True)),
                ('invoice_date', models.IntegerField(blank=True, choices=[(1, 'YES'), (0, 'NO')], db_index=True, default=0, null=True)),
                ('invoice_due_date', models.IntegerField(blank=True, choices=[(1, 'YES'), (0, 'NO')], db_index=True, default=0, null=True)),
                ('invoice_status', models.IntegerField(blank=True, choices=[(1, 'YES'), (0, 'NO')], db_index=True, default=0, null=True)),
                ('invoice_amount', models.IntegerField(blank=True, choices=[(1, 'YES'), (0, 'NO')], db_index=True, default=0, null=True)),
                ('customize_view_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.CustomizeModuleName')),
            ],
        ),
        migrations.CreateModel(
            name='CustomizeExpenseView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expense_vocher', models.IntegerField(blank=True, choices=[(1, 'YES'), (0, 'NO')], db_index=True, default=0, null=True)),
                ('expense_date', models.IntegerField(blank=True, choices=[(1, 'YES'), (0, 'NO')], db_index=True, default=0, null=True)),
                ('expense_vendor', models.IntegerField(blank=True, choices=[(1, 'YES'), (0, 'NO')], db_index=True, default=0, null=True)),
                ('expense_payment', models.IntegerField(blank=True, choices=[(1, 'YES'), (0, 'NO')], db_index=True, default=0, null=True)),
                ('expense_method', models.IntegerField(blank=True, choices=[(1, 'YES'), (0, 'NO')], db_index=True, default=0, null=True)),
                ('expense_amount', models.IntegerField(blank=True, choices=[(1, 'YES'), (0, 'NO')], db_index=True, default=0, null=True)),
                ('customize_view_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.CustomizeModuleName')),
            ],
        ),
        migrations.CreateModel(
            name='CustomizeCreditView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('credit_note', models.IntegerField(blank=True, choices=[(1, 'YES'), (0, 'NO')], db_index=True, default=0, null=True)),
                ('credit_name', models.IntegerField(blank=True, choices=[(1, 'YES'), (0, 'NO')], db_index=True, default=0, null=True)),
                ('credit_reference', models.IntegerField(blank=True, choices=[(1, 'YES'), (0, 'NO')], db_index=True, default=0, null=True)),
                ('credit_date', models.IntegerField(blank=True, choices=[(1, 'YES'), (0, 'NO')], db_index=True, default=0, null=True)),
                ('credit_amount', models.IntegerField(blank=True, choices=[(1, 'YES'), (0, 'NO')], db_index=True, default=0, null=True)),
                ('customize_view_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.CustomizeModuleName')),
            ],
        ),
        migrations.CreateModel(
            name='CustomizeContactView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_name', models.IntegerField(blank=True, choices=[(1, 'YES'), (0, 'NO')], db_index=True, default=0, null=True)),
                ('contact_org_name', models.IntegerField(blank=True, choices=[(1, 'YES'), (0, 'NO')], db_index=True, default=0, null=True)),
                ('contact_email', models.IntegerField(blank=True, choices=[(1, 'YES'), (0, 'NO')], db_index=True, default=0, null=True)),
                ('contact_phone', models.IntegerField(blank=True, choices=[(1, 'YES'), (0, 'NO')], db_index=True, default=0, null=True)),
                ('customize_view_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.CustomizeModuleName')),
            ],
        ),
        migrations.CreateModel(
            name='creditnote_Items',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, db_index=True, max_length=250, null=True)),
                ('product_type', models.CharField(blank=True, db_index=True, max_length=10, null=True)),
                ('price', models.CharField(blank=True, db_index=True, max_length=50, null=True)),
                ('unit', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('quantity', models.CharField(blank=True, db_index=True, max_length=10, null=True)),
                ('discount_type', models.CharField(blank=True, db_index=True, max_length=10, null=True)),
                ('discount', models.CharField(blank=True, db_index=True, max_length=11, null=True)),
                ('tax', models.CharField(blank=True, db_index=True, max_length=11, null=True)),
                ('amount', models.CharField(blank=True, db_index=True, max_length=11, null=True)),
                ('credit_inventory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.CreditNode')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.ProductsModel')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'creditnote_item_tbl',
            },
        ),
        migrations.CreateModel(
            name='ContactsFileUpload',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('csv_file', models.FileField(blank=True, db_index=True, null=True, upload_to=app.models.contacts_model.file_rename)),
                ('created_date', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'contacts_fileupload_tbl',
            },
        ),
        migrations.CreateModel(
            name='CollectPartial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collection_due_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('amount', models.FloatField(blank=True, db_index=True, null=True)),
                ('currency_type', models.CharField(choices=[('USD', 'US Dollar'), ('CAD', 'Canadian Dollar'), ('EUR', 'Euro'), ('AED', 'United Arab Emirates Dirham'), ('AFN', 'Afghan Afghani'), ('ALL', 'Albanian Lek'), ('AMD', 'Armenian Dram'), ('ARS', 'Argentine Peso'), ('AUD', 'Australian Dollar'), ('AZN', 'Azerbaijani Manat'), ('BAM', 'Bosnia-Herzegovina Convertible Mark'), ('BDT', 'Bangladeshi Taka'), ('BGN', 'Bulgarian Lev'), ('BHD', 'Bahraini Dinar'), ('BIF', 'Burundian Franc'), ('BND', 'Brunei Dollar'), ('BOB', 'Bolivian Boliviano'), ('BRL', 'Brazilian Real'), ('BWP', 'Botswanan Pula'), ('BYN', 'Belarusian Ruble'), ('BZD', 'Belize Dollar'), ('CDF', 'Congolese Franc'), ('CHF', 'Swiss Franc'), ('CLP', 'Chilean Peso'), ('CNY', 'Chinese Yuan'), ('COP', 'Colombian Peso'), ('CRC', 'Costa Rican Colon'), ('CVE', 'Cape Verdean Escudo'), ('CZK', 'Czech Republic Koruna'), ('DJF', 'Djiboutian Franc'), ('DKK', 'Danish Krone'), ('DOP', 'Dominican Peso'), ('DZD', 'Algerian Dinar'), ('EEK', 'Estonian Kroon'), ('EGP', 'Egyptian Pound'), ('ERN', 'Eritrean Nakfa'), ('ETB', 'Ethiopian Birr'), ('GBP', 'British Pound Sterling'), ('GEL', 'Georgian Lari'), ('GHS', 'Ghanaian Cedi'), ('GNF', 'Guinean Franc'), ('GTQ', 'Guatemalan Quetzal'), ('HKD', 'Hong Kong Dollar'), ('HNL', 'Honduran Lempira'), ('HRK', 'Croatian Kuna'), ('HUF', 'Hungarian Forint'), ('IDR', 'Indonesian Rupiah'), ('ILS', 'Israeli New Sheqel'), ('INR', 'Indian Rupee'), ('IQD', 'Iraqi Dinar'), ('IRR', 'Iranian Rial'), ('ISK', 'Icelandic Krona'), ('JMD', 'Jamaican Dollar'), ('JOD', 'Jordanian Dinar'), ('JPY', 'Japanese Yen'), ('KES', 'Kenyan Shilling'), ('KHR', 'Cambodian Riel'), ('KMF', 'Comorian Franc'), ('KRW', 'South Korean Won'), ('KWD', 'Kuwaiti Dinar'), ('KZT', 'Kazakhstani Tenge'), ('LBP', 'Lebanese Pound'), ('LKR', 'Sri Lankan Rupee'), ('LTL', 'Lithuanian Litas'), ('LVL', 'Latvian Lats'), ('LYD', 'Libyan Dinar'), ('MAD', 'Moroccan Dirham'), ('MDL', 'Moldovan Leu'), ('MGA', 'Malagasy Ariary'), ('MKD', 'Macedonian Denar'), ('MMK', 'Myanma Kyat'), ('MOP', 'Macanese Pataca'), ('MUR', 'Mauritian Rupee'), ('MXN', 'Mexican Peso'), ('MYR', 'Malaysian Ringgit'), ('MZN', 'Mozambican Metical'), ('NAD', 'Namibian Dollar'), ('NGN', 'Nigerian Naira'), ('NIO', 'Nicaraguan Cordoba'), ('NOK', 'Norwegian Krone'), ('NPR', 'Nepalese Rupee'), ('NZD', 'New Zealand Dollar'), ('OMR', 'Omani Rial'), ('PAB', 'Panamanian Balboa'), ('PEN', 'Peruvian Nuevo Sol'), ('PHP', 'Philippine Peso'), ('PKR', 'Pakistani Rupee'), ('PLN', 'Polish Zloty'), ('PYG', 'Paraguayan Guarani'), ('QAR', 'Qatari Rial'), ('RON', 'Romanian Leu'), ('RSD', 'Serbian Dinar'), ('RUB', 'Russian Ruble'), ('RWF', 'Rwandan Franc'), ('SAR', 'Saudi Riyal'), ('SDG', 'Sudanese Pound'), ('SEK', 'Swedish Krona'), ('SGD', 'Singapore Dollar'), ('SOS', 'Somali Shilling'), ('SYP', 'Syrian Pound'), ('THB', 'Thai Baht'), ('TND', 'Tunisian Dinar'), ('TOP', 'Tongan Paanga'), ('TRY', 'Turkish Lira'), ('TTD', 'Trinidad and Tobago Dollar'), ('TWD', 'New Taiwan Dollar'), ('TZS', 'Tanzanian Shilling'), ('UAH', 'Ukrainian Hryvnia'), ('UGX', 'Ugandan Shilling'), ('UYU', 'Uruguayan Peso'), ('UZS', 'Uzbekistan Som'), ('VEF', 'Venezuelan Bolivar'), ('VND', 'Vietnamese Dong'), ('XAF', 'CFA Franc BEAC'), ('XOF', 'CFA Franc BCEAO'), ('YER', 'Yemeni Rial'), ('ZAR', 'South African Rand'), ('ZMK', 'Zambian Kwacha'), ('ZWL', 'Zimbabwean Dollar')], db_index=True, max_length=5)),
                ('payment_type', models.IntegerField(choices=[(1, 'Cash'), (2, 'Card'), (3, 'Cheque'), (4, 'Demand Draft'), (5, 'Net Banking')], db_index=True, default=1)),
                ('collection_status', models.IntegerField(choices=[(1, 'Collection Expected'), (2, 'Collected')], db_index=True, default=1)),
                ('collection_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('collect_part', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.Collections')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='collections',
            name='contact',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.Contacts'),
        ),
        migrations.AddField(
            model_name='collections',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='BundleProducts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(blank=True, db_index=True, default=0, null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_child', to='app.ProductsModel')),
                ('product_bundle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_bundle', to='app.ProductsModel')),
            ],
        ),
        migrations.AddField(
            model_name='accledger',
            name='major_heads',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.MajorHeads'),
        ),
        migrations.AddField(
            model_name='accledger',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='accgroups',
            name='major_head',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.MajorHeads'),
        ),
        migrations.AddField(
            model_name='accgroups',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
